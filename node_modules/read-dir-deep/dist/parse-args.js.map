{"version":3,"sources":["../src/parse-args.ts"],"names":["defaultIgnorePatterns","defaultPatterns","defaultOptions","deep","Infinity","dot","markDirectories","gitignore","ignore","isInsideProcessCwd","pathname","isCwd","insideCwd","parseArgs","rootDir","options","cwd","absolute","patterns","globbyOpts","parsedRootDir","path","resolve","processCwd","process","rootDirIsInsideProcessCwd","globbyOptions"],"mappings":";;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAGA,MAAMA,qBAAqB,GAAG,CAC7B,cAD6B,EAE7B,oBAF6B,EAG7B,YAH6B,EAI7B,eAJ6B,EAK7B,aAL6B,EAM7B,YAN6B,EAO7B,aAP6B,EAQ7B,gBAR6B,CAA9B;;AAWA,MAAMC,eAAe,GAAG,CAAC,IAAD,CAAxB;AACA,MAAMC,cAAc,GAAG;AACtBC,EAAAA,IAAI,EAAEC,QADgB;AAEtBC,EAAAA,GAAG,EAAE,IAFiB;AAGtBC,EAAAA,eAAe,EAAE,IAHK;AAItBC,EAAAA,SAAS,EAAE,IAJW;AAKtBC,EAAAA,MAAM,EAAER;AALc,CAAvB;;AAQA,SAASS,kBAAT,CAA4BC,QAA5B,EAAuD;AACtD,QAAMC,KAAK,GAAG,wBAAUD,QAAV,CAAd;;AAEA,MAAIC,KAAK,KAAK,IAAd,EAAoB;AACnB,WAAOA,KAAP;AACA;;AAED,QAAMC,SAAS,GAAG,0BAAYF,QAAZ,CAAlB;AAEA,SAAOE,SAAP;AACA,C,CAED;;;AACA,SAASC,SAAT,CAAmBC,OAAnB,EAAoCC,OAApC,EAAsD;AACrD,qCAAgBD,OAAhB,EAAyBC,OAAzB,EADqD,CAGrD;;AACA,MAAI;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,QAAP;AAAiBC,IAAAA,QAAQ,GAAGjB,eAA5B;AAA6C,OAAGkB;AAAhD,MAA+DJ,OAAnE;;AAEA,MAAIK,aAAa,GAAGC,cAAKC,OAAL,CAAaR,OAAb,CAApB;;AAEA,QAAMS,UAAU,GAAGF,cAAKC,OAAL,CAAaE,OAAO,CAACR,GAAR,EAAb,CAAnB;;AACA,QAAMS,yBAAyB,GAAGhB,kBAAkB,CAACW,aAAD,CAApD,CATqD,CAWrD;;AACA,MAAI,OAAOH,QAAP,KAAoB,SAAxB,EAAmC;AAClCA,IAAAA,QAAQ,GAAGQ,yBAAyB,KAAK,KAAzC;AACA;;AAED,MAAI,OAAOT,GAAP,KAAe,QAAnB,EAA6B;AAC5B;AACAA,IAAAA,GAAG,GAAGS,yBAAyB,KAAK,IAA9B,GAAqCF,UAArC,GAAkDH,aAAxD;AACA;;AAEDJ,EAAAA,GAAG,GAAG,oBAAMA,GAAN,CAAN;AACAI,EAAAA,aAAa,GAAG,oBAAMA,aAAN,CAAhB;AAEA,QAAMM,aAAa,GAAG,EACrB,GAAGxB,cADkB;AAErB,OAAGiB,UAFkB;AAGrBH,IAAAA,GAAG,EAAEI,aAHgB;AAIrBH,IAAAA;AAJqB,GAAtB;AAOA,SAAO;AACNA,IAAAA,QADM;AAENH,IAAAA,OAFM;AAGNE,IAAAA,GAHM;AAINE,IAAAA,QAJM;AAKNQ,IAAAA;AALM,GAAP;AAOA","sourcesContent":["import path from 'path';\nimport isPathCwd from 'is-path-cwd';\nimport isPathInCwd from 'is-path-in-cwd';\nimport slash from 'slash';\nimport { validateOptions } from './validate-args';\nimport { Options } from './read-dir-deep';\n\nconst defaultIgnorePatterns = [\n\t'**/.DS_Store',\n\t'**/node_modules/**',\n\t'**/.git/**',\n\t'**/.vscode/**',\n\t'**/.idea/**',\n\t'**/dist/**',\n\t'**/build/**',\n\t'**/coverage/**',\n];\n\nconst defaultPatterns = ['**'];\nconst defaultOptions = {\n\tdeep: Infinity,\n\tdot: true,\n\tmarkDirectories: true,\n\tgitignore: true,\n\tignore: defaultIgnorePatterns,\n};\n\nfunction isInsideProcessCwd(pathname: string): boolean {\n\tconst isCwd = isPathCwd(pathname);\n\n\tif (isCwd === true) {\n\t\treturn isCwd;\n\t}\n\n\tconst insideCwd = isPathInCwd(pathname);\n\n\treturn insideCwd;\n}\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nfunction parseArgs(rootDir: string, options: Options) {\n\tvalidateOptions(rootDir, options);\n\n\t// eslint-disable-next-line prefer-const\n\tlet { cwd, absolute, patterns = defaultPatterns, ...globbyOpts } = options;\n\n\tlet parsedRootDir = path.resolve(rootDir);\n\n\tconst processCwd = path.resolve(process.cwd());\n\tconst rootDirIsInsideProcessCwd = isInsideProcessCwd(parsedRootDir);\n\n\t// default to absolute: true when rootDir is outside process.cwd()\n\tif (typeof absolute !== 'boolean') {\n\t\tabsolute = rootDirIsInsideProcessCwd === false;\n\t}\n\n\tif (typeof cwd !== 'string') {\n\t\t// default to process.cwd when inside cwd\n\t\tcwd = rootDirIsInsideProcessCwd === true ? processCwd : parsedRootDir;\n\t}\n\n\tcwd = slash(cwd);\n\tparsedRootDir = slash(parsedRootDir);\n\n\tconst globbyOptions = {\n\t\t...defaultOptions,\n\t\t...globbyOpts,\n\t\tcwd: parsedRootDir,\n\t\tabsolute,\n\t};\n\n\treturn {\n\t\tabsolute,\n\t\trootDir,\n\t\tcwd,\n\t\tpatterns,\n\t\tglobbyOptions,\n\t} as const;\n}\n\nexport { parseArgs, defaultIgnorePatterns };\n"],"file":"parse-args.js"}